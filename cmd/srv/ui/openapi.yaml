# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: AitrailblazerService API
    description: This API represents ...
    version: 0.0.1
paths:
    /echo/{message}:
        get:
            tags:
                - AitrailblazerService
            description: echo
            operationId: AitrailblazerService_Echo
            parameters:
                - name: message
                  in: path
                  required: true
                  schema:
                    type: string
                - name: value
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EchoMessage'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /listpets:
        get:
            tags:
                - AitrailblazerService
            description: ListPets
            operationId: AitrailblazerService_ListPets
            parameters:
                - name: pageSize
                  in: query
                  description: The maximum number of pets to return. The service may return fewer than this value. If unspecified, at most 50 pets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: A page token, received from a previous `ListPets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListBooks` must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPetsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /pets:
        get:
            tags:
                - AitrailblazerService
            description: "FindPets\n\n The FindPets RPC (Remote Procedure Call) allows \n a client to search for pets based on certain \n parameters. The parameters include tags \n (such as breed, color, etc.) and a limit on the \n number of pets to be returned. The RPC uses a \n GET HTTP request to the \"/pets\" endpoint to \n retrieve the desired pets. The result of the \n RPC is a Pet message, which contains information \n about the found pets."
            operationId: AitrailblazerService_FindPets
            parameters:
                - name: tags
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Pet'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AitrailblazerService
            description: "AddPet\n\n The AddPet RPC allows for the addition of a new \n pet to the system. It takes in AddPetParameters \n as input, which includes a NewPet message that \n contains the name and tag of the new pet. \n The RPC returns a Pet message, which likely \n includes information about the newly added pet. \n The RPC can be accessed via an HTTP POST request \n to the \"/pets\" endpoint, with the new pet \n information being sent in the body of the request.\n \n Example #1: name = \"Spot\", tag = \"TagOfSpot\"\n \n Example #2: name = \"Fido\", tag = \"TagOfFido\"\n \n Example #3: name = \"Rover\", tag = \"TagOfRover\"\n\n Example #4: name = \"Spike\", tag = \"TagOfSpike\"\n\n Example #5: name = \"Buddy\", tag = \"TagOfBuddy\""
            operationId: AitrailblazerService_AddPet
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewPet'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Pet'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /pets/{id}:
        get:
            tags:
                - AitrailblazerService
            description: "FindPetByID\n This is a function signature for a Remote Procedure \n Call (RPC) in the Google API specification language. \n The function is called \"FindPetByID\" and it takes \n in a single input parameter called \"FindPetByIDParameters\". \n The function returns a single output of type \"Pet\".\n \n The \"option\" statement specifies additional \n options for the function, in this case specifying \n that the function can be called using an HTTP GET \n request to the URL \"/pets/{id}\", where \"{id}\" is \n a placeholder for a specific pet ID.\n \n This function allows a client to retrieve \n information about a specific pet by providing \n the pet's ID as a parameter in the HTTP request.\n \n Returns a pet by ID"
            operationId: AitrailblazerService_FindPetByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Pet'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AitrailblazerService
            description: "DeletePet\n\n The DeletePet RPC (Remote Procedure Call) is used \n to delete a pet from a database. It takes in a\n  DeletePetParameters message as input, which \n contains the ID of the pet to be deleted. \n The RPC returns an Error message, which includes \n a code and a message describing any errors that \n may have occurred during the delete operation. \n The RPC uses the HTTP DELETE method to delete \n the pet from the database, with the ID of the \n pet being specified in the URL as a path parameter."
            operationId: AitrailblazerService_DeletePet
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/ping:
        get:
            tags:
                - AitrailblazerService
            description: SendPing
            operationId: AitrailblazerService_SendPing
            parameters:
                - name: message
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PingResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        EchoMessage:
            type: object
            properties:
                value:
                    type: string
        Error:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListPetsResponse:
            type: object
            properties:
                pets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Pet'
                    description: The Pets.
                nextPageToken:
                    type: string
                    description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        NewPet:
            type: object
            properties:
                name:
                    type: string
                tag:
                    type: string
            description: The NewPet message contains information about a  new pet being added to the system. It includes  the name of the pet (a string) and a tag  (also a string) that can be used to identify  the pet. This message is used as the "new_pet"  field in the AddPetParameters message, which is  passed as input to the AddPet RPC.
        Pet:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the pet
                tag:
                    type: string
                    description: The tag of the pet
                id:
                    type: integer
                    description: The id of the pet
                    format: int64
            description: 'The message Pet is a data structure that  represents a pet in this gRPC function.  It has three fields: name, tag, and id.  The name field is a string that represents  the name of the pet. The tag field is a  string that represents a tag or label  associated with the pet. The id field  is an integer that represents a unique  identifier for the pet. These three  fields are defined as required fields,  meaning that they must be provided when  creating a new Pet object.'
        PingResponse:
            type: object
            properties:
                pong:
                    $ref: '#/components/schemas/Pong'
        Pong:
            type: object
            properties:
                index:
                    type: integer
                    format: int32
                message:
                    type: string
                ver:
                    type: string
                receivedOn:
                    type: string
                    format: date-time
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
tags:
    - name: AitrailblazerService
