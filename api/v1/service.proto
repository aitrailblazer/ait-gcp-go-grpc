// Copyright 2023 AITrailblazer, LLC. All Rights Reserved.
//

syntax = "proto3";
// import "google/api/annotations.proto";
// import "google/api/client.proto";
// import "google/protobuf/any.proto";
// import "google/protobuf/duration.proto";
// import "google/protobuf/empty.proto";
// import "google/rpc/status.proto";
import "google/protobuf/descriptor.proto";
// import "validate/validate.proto";
import "google/api/annotations.proto";
// import "google/longrunning/operations.proto";

// import "google/type/date.proto";
// import "google/protobuf/duration.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
// import "google/api/routing.proto";
import "google/protobuf/timestamp.proto";


// import "google/api/client.proto";
// import "google/api/field_behavior.proto";
// import "google/api/routing.proto";
// import "google/iam/v1/iam_policy.proto";
// import "google/iam/v1/policy.proto";
// import "google/protobuf/duration.proto";
// import "google/protobuf/empty.proto";
// import "google/protobuf/field_mask.proto";
// import "google/protobuf/timestamp.proto";
// import "google/type/date.proto";

package aitrailblazer.service.v1;

// import "google/api/field_behavior.proto";
// import "google/api/resource.proto";
// import "google/protobuf/timestamp.proto";

// option java_package = "com.google.cloud.apigeeregistry.v1";
// option java_multiple_files = true;
// option java_outer_classname = "AdminModelsProto";

// https://github.com/aitrailblazer/ait-gcp-go-grpc/tree/main
option go_package = "github.com/aitrailblazer/ait-gcp-go-grpc/rpc/v1/pb";

service AitrailblazerService {
  // /v1/ping or with optional message as query /v1/ping?message=test
  rpc SendPing(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/v1/ping"
    };
  }
  rpc Echo(EchoMessage) returns (EchoMessage) {
    option (google.api.http) = {
      get: "/echo/{message}"
    };
  }

  // rpc GetBook(GetBookRequest) returns (Book) {
  //   option (google.api.http) = {
  //     get: "/v1/{name=publishers/*/books/*}"
  //   };
  //   option (google.api.method_signature) = "name";
  // }
  //  Returns a specific bookstore shelf.
   rpc GetShelf(GetShelfRequest) returns (Shelf) {
    // Client example - returns the first shelf:
    //   curl http://DOMAIN_NAME/v1/shelves/1
    option (google.api.http) = { 
      get: "/v1/shelves/{shelf}" 
    };
  }
}

message PingRequest {
  string message = 1;
}

message Pong {
  int32 index = 1; // index
  string message = 2; // message
  string ver = 3; // version
  google.protobuf.Timestamp received_on = 4; // received_on
}

message PingResponse {
  Pong pong = 1;
}
message EchoMessage {
  string value = 1;
}
message Error {
  int32 code = 1;
  string message = 2;
}

// Request message for GetShelf method.
message GetShelfRequest {
  // The ID of the shelf resource to retrieve.
  int64 shelf = 1;
}
// A shelf resource.
message Shelf {
  // A unique shelf id.
  int64 id = 1;
  // A theme of the shelf (fiction, poetry, etc).
  string theme = 2;
}
// A representation of a book in the library.
message Book {
  option (google.api.resource) = {
    type: "library.googleapis.com/Book"
    pattern: "publishers/{publisher}/books/{book}"
  };

  // The resource name of the book.
  // Format: publishers/{publisher}/books/{book}
  string name = 1;

  // Other fields...
}

message GetBookRequest {
  // The name of the book to retrieve.
  // Format: publishers/{publisher}/books/{book}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "library.googleapis.com/Book"
    }];
}

// The greeting service definition.
// service AitrailblazerService {
//   // Sends a greeting
//   rpc SayHello (SayHelloRequest) returns (SayHelloResponse) {
//   // Client example - returns the first shelf:
//   //   curl http://DOMAIN_NAME/v1/hello/John
//   option (google.api.http) = { get: "/v1/hello/{name}" };
//   }

// $ curl -X POST -k https://localhost:10000/v1/echo -d '{"value": "CoreOS is hiring!"}'
// rpc Echo(EchoMessage) returns (EchoMessage) {
//     option (google.api.http) = {
//       post: "/v1/echo"
//       body: "*"
//     };
//   }
// }
// message EchoMessage {
//   string value = 1;
// }
// The request message containing the user's name.
// message SayHelloRequest {
//   // name must be between 1 and 10 characters, inclusive
// string name = 1 [(validate.rules).string = { 
//   min_len: 1, max_len: 10
// }];

//   string name  = 1 [(validate.rules).string = {
//     pattern:   "^[^[0-9]A-Za-z]+( [^[0-9]A-Za-z]+)*$",
//     max_bytes: 256,
//  }];

// }

// The response message containing the greetings
// message SayHelloResponse {
//   string message = 1;
// }
